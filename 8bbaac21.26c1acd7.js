(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{147:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return u}));var a=n(1),o=n(9),r=(n(0),n(157)),i={id:"component-bindings",title:"Testing @Input and @Ouput",sidebar_label:"@Input and @Output"},c={id:"component-bindings",title:"Testing @Input and @Ouput",description:"In the previous section, we have seen how to mock services and child components in a component test.  ",source:"@site/docs/component-bindings.md",permalink:"/ng-vacuum/docs/component-bindings",editUrl:"https://github.com/hmil/ng-vacuum/edit/master/docs/docs/component-bindings.md",sidebar_label:"@Input and @Output",sidebar:"someSidebar",previous:{title:"Test a Component",permalink:"/ng-vacuum/docs/component-test"},next:{title:"Mocking techniques",permalink:"/ng-vacuum/docs/mocking-techniques"}},s=[],p={rightToc:s};function u(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"In the previous section, we have seen how to mock services and child components in a component test.",Object(r.b)("br",{parentName:"p"}),"\n","In this section we will cover how to inject data into the inputs of our components, and how to assert events emitted on its outputs."),Object(r.b)("h1",{id:"binding-input-data"},"Binding input data"),Object(r.b)("p",null,"Consider the component below:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts"}),"@Component({\n    selector: 'greetings-component',\n    templateUrl: `\n        <span test-id=\"message\">Hello {{name}}</span>\n    `\n})\nexport class GreetingsComponent {\n    @Input()\n    userName: string;\n}\n")),Object(r.b)("p",null,"We would like to verify that the label gets updated with the user name."),Object(r.b)("p",null,"As always, we create a page object to model the interactions with our component:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts"}),"class Page<T> extends BasePage<GreetingsComponent, T> {\n\n    get messageText(): string {\n        return (this.rendering.find('[test-id=message]').nativeElement as HTMLElement).innerText\n    }\n}\n")),Object(r.b)("p",null,"Then, we use ",Object(r.b)("inlineCode",{parentName:"p"},"setInputs")," on the page object to update the input bindings and trigger a change detection cycle:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts"}),"it('greets the user', fakeAsync(() => {\n    // Render the component with initial input values\n    const page = new Page(renderComponent(GreetingsComponent, GreetingsModule, {\n        inputs: {\n            userName: 'John'\n        }\n    }));\n    expect(page.messageText).toBe('Hello John');\n\n    // Set input values and test again\n    page.setInputs({\n        userName: 'Atul'\n    });\n    expect(page.messageText).toBe('Hello Atul');\n}));\n")),Object(r.b)("p",null,"Setting input values after the component has been initialized can be useful when you want to test ",Object(r.b)("inlineCode",{parentName:"p"},"onChanges")," logic."),Object(r.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"caution")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"You can only use ",Object(r.b)("inlineCode",{parentName:"p"},"setInputs")," for inputs that you have initialized in ",Object(r.b)("inlineCode",{parentName:"p"},"renderComponent"),". This is what the template type parameter ",Object(r.b)("inlineCode",{parentName:"p"},"T")," in ",Object(r.b)("inlineCode",{parentName:"p"},"Page<T>")," is for."))),Object(r.b)("h1",{id:"test-output-events"},"Test output events"),Object(r.b)("p",null,"Let's consider a keypad component which lets users type in a numeric code:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts"}),'@Component({\n    selector: \'keypad-component\',\n    templateUrl: `\n        <button *ngFor="number of numbers" [test-id]="number" (click)="onClick(number)></button>\n    `\n})\nexport class KeypadComponent {\n\n    numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n    code = \'\';\n\n    @Output()\n    codeChange = new EventEmitter<string>();\n\n    onClick(n: number) {\n        this.code += String(n);\n        this.codeChange.emit(this.code);\n    }\n}\n')),Object(r.b)("p",null,"We would like to test the emitted output."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts"}),"class Page<T> extends BasePage<KeypadComponent, T> {\n\n    getButton(n: number): HTMLButtonElement {\n        return this.rendering.find(`[test-id=${n}]`).nativeElement;\n    }\n}\n")),Object(r.b)("p",null,"The page object exposes outputs utilities on ",Object(r.b)("inlineCode",{parentName:"p"},"page.outputs"),". Use ",Object(r.b)("inlineCode",{parentName:"p"},"capture()")," to create an array which receives all future events emitted on this output:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts"}),"it('lets the user type a combination', fakeAsync(() => {\n    const page = new Page(renderComponent(KeypadComponent, KeypadModule));\n\n    const emittedEvents = page.outputs.codeChage.capture();\n\n    page.getButton(1).click();\n    page.getButton(3).click();\n    page.getButton(3).click();\n    page.getButton(7).click();\n\n    expect(emittedEvents).toEqual(['1', '13', '133', '1337'])\n}));\n")))}u.isMDXComponent=!0},157:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return d}));var a=n(0),o=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=o.a.createContext({}),u=function(e){var t=o.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c({},t,{},e)),n},l=function(e){var t=u(e.components);return o.a.createElement(p.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},m=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),l=u(n),m=a,d=l["".concat(i,".").concat(m)]||l[m]||b[m]||r;return n?o.a.createElement(d,c({ref:t},p,{components:n})):o.a.createElement(d,c({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var p=2;p<r;p++)i[p]=n[p];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);