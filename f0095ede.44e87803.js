(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{154:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return b}));var c=n(1),a=n(9),r=(n(0),n(157)),o={id:"service-test",title:"Test a Service",sidebar_label:"Test a Service"},i={id:"service-test",title:"Test a Service",description:"In this section, you will learn the basics of writing a service test with NgVacuum. We provide sample code so you can follow along.",source:"@site/docs/service-test.md",permalink:"/ng-vacuum/docs/service-test",editUrl:"https://github.com/hmil/ng-vacuum/edit/master/docs/docs/service-test.md",sidebar_label:"Test a Service",sidebar:"someSidebar",previous:{title:"Setup",permalink:"/ng-vacuum/docs/setup"},next:{title:"Test a Component",permalink:"/ng-vacuum/docs/component-test"}},s=[{value:"Sample project",id:"sample-project",children:[]},{value:"Instantiate the service",id:"instantiate-the-service",children:[]},{value:"Write a test case",id:"write-a-test-case",children:[{value:"Specify mock behavior",id:"specify-mock-behavior",children:[]},{value:"Expect calls",id:"expect-calls",children:[]}]},{value:"Recap",id:"recap",children:[]}],l={rightToc:s};function b(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(r.b)("wrapper",Object(c.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"In this section, you will learn the basics of writing a service test with NgVacuum. We provide sample code so you can follow along."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"tl;dr"),": jump directly to the ",Object(r.b)("a",Object(c.a)({parentName:"p"},{href:"#recap"}),"recap")," for the full code example."),Object(r.b)("h2",{id:"sample-project"},"Sample project"),Object(r.b)("p",null,"Copy the code below if you would like to follow the examples in this section."),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"access-control.service.ts")),Object(r.b)("pre",null,Object(r.b)("code",Object(c.a)({parentName:"pre"},{className:"language-ts"}),"import { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class AccessControlService {\n\n    constructor(\n            private readonly authService: AuthService,\n            private readonly router: Router) {\n    }\n\n    public checkAccess(zone: 'lobby' | 'dashboard'): boolean {\n        if (zone === 'lobby' && this.authService.isAuthenticated()) {\n            this.router.navigate(['logout']);\n            return false;\n        } else if (zone === 'dashboard' && !this.authService.isAuthenticated()) {\n            this.router.navigate(['login']);\n            return false;\n        }\n        return true;\n    }\n}\n")),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"auth.service.ts")),Object(r.b)("pre",null,Object(r.b)("code",Object(c.a)({parentName:"pre"},{className:"language-ts"}),"import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class AuthService {\n\n    private authenticated = false;\n\n    public isAuthenticated(): boolean {\n        return this.authenticated;\n    }\n\n    public setAuthenticated(value: boolean): void {\n        this.authenticated = value;\n    }\n}\n")),Object(r.b)("h2",{id:"instantiate-the-service"},"Instantiate the service"),Object(r.b)("p",null,"The first thing you'll need when testing a service is... the service itself!"),Object(r.b)("p",null,"Here, we would like to test ",Object(r.b)("inlineCode",{parentName:"p"},"AccessControlService"),". We instantiate it with ",Object(r.b)("inlineCode",{parentName:"p"},"getService"),"."),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"access-control.service.spec.ts")),Object(r.b)("pre",null,Object(r.b)("code",Object(c.a)({parentName:"pre"},{className:"language-ts"}),"import { AccessControlService } from './access-control.service';\nimport { getService } from 'ng-vacuum';\n\ndescribe('AccessControlService', () => {\n    let service: AccessControlService;\n\n    beforeEach(() => {\n        service = getService(AccessControlService);\n    });\n});\n")),Object(r.b)("p",null,"The next thing you'll need is... nothing!"),Object(r.b)("p",null,"This is the only boilerplate needed to bootstrap a service test with NgVacuum."),Object(r.b)("p",null,"All the dependencies of ",Object(r.b)("inlineCode",{parentName:"p"},"AccessControlService")," are automatically mocked and injected. You don't need to deal with this yourself."),Object(r.b)("h2",{id:"write-a-test-case"},"Write a test case"),Object(r.b)("p",null,"We would like to test that ",Object(r.b)("inlineCode",{parentName:"p"},"checkAccess")," redirects to the logout page when trying to access the lobby while unauthenticated. This corresponds to the first branch of the method, specifically:"),Object(r.b)("pre",null,Object(r.b)("code",Object(c.a)({parentName:"pre"},{className:"language-ts"}),"if (zone === 'lobby' && this.authService.isAuthenticated()) {\n    this.router.navigate(['logout']);\n    return false;\n}\n")),Object(r.b)("p",null,"We start off by calling the method with the appropriate parameter and asserting the expected result."),Object(r.b)("pre",null,Object(r.b)("code",Object(c.a)({parentName:"pre"},{className:"language-ts"}),"describe('AccessControlService', () => {\n\n    // snip\n\n    it('redirects to logout when trying to access the lobby while authenticated', () => {\n        const result = service.checkAccess('lobby');\n        expect(result).toBe(false);\n    });\n})\n")),Object(r.b)("p",null,"This is what we get when running this test:"),Object(r.b)("pre",null,Object(r.b)("code",Object(c.a)({parentName:"pre"},{}),"Error: Unexpected property access: <AuthService>.isAuthenticated\nThis mock is not backed\n")),Object(r.b)("p",null,"This error message tells us that something tried to access a member called ",Object(r.b)("inlineCode",{parentName:"p"},"isAuthenticated")," on the service ",Object(r.b)("inlineCode",{parentName:"p"},"AuthService"),", but we did not specify what should happen in this situation."),Object(r.b)("p",null,"This error comes from ",Object(r.b)("a",Object(c.a)({parentName:"p"},{href:"https://github.com/hmil/omnimock"}),"OmniMock"),", the type-safe mocking library used by NgVacuum to mock all service dependencies. This library is a safer alternative to standard jasmine mocks, as it was built for TypeScript and it is type safe out of the box."),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(c.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(c.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(c.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(c.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(r.b)("div",Object(c.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"In this situation, a typical jasmine mock will not throw an error and instead it will allow the method to be called and return ",Object(r.b)("inlineCode",{parentName:"p"},"undefined"),". This default behavior most likely violates the type contract of the class and can lead to difficult bugs down the line, such as the infamous ",Object(r.b)("inlineCode",{parentName:"p"},"undefined is not a function"),"."))),Object(r.b)("h3",{id:"specify-mock-behavior"},"Specify mock behavior"),Object(r.b)("p",null,"So how do we specify what happens when ",Object(r.b)("inlineCode",{parentName:"p"},"AuthService.isAuthenticated")," is called?\nWe first need to obtain a reference to the mock of ",Object(r.b)("inlineCode",{parentName:"p"},"AuthService")," with ",Object(r.b)("inlineCode",{parentName:"p"},"getMock"),". Then we use the mock DSL provided by OmniMock to specify the behavior."),Object(r.b)("pre",null,Object(r.b)("code",Object(c.a)({parentName:"pre"},{className:"language-ts"}),"import { when } from 'omnimock';\nimport { getMock } from 'ng-vacuum';\n\n// snip\n\nit('redirects to logout when trying to access the lobby while authenticated', () => {\n    const mockOfAuthService = getMock(AuthService);\n    when(mockOfAuthService.isAuthenticated()).return(true);\n    const result = service.checkAccess('lobby');\n    expect(result).toBe(false);\n});\n")),Object(r.b)("h3",{id:"expect-calls"},"Expect calls"),Object(r.b)("p",null,"At this point, our test is still not passing. It complains that no behavior was specified for ",Object(r.b)("inlineCode",{parentName:"p"},"<Router>.navigate"),"."),Object(r.b)("p",null,"Again, we use the DSL to specify what happens when this method is called."),Object(r.b)("pre",null,Object(r.b)("code",Object(c.a)({parentName:"pre"},{className:"language-ts"}),"it('redirects to logout when trying to access the lobby while authenticated', () => {\n    when(getMock(AuthService).isAuthenticated()).return(true);\n    // Router.navigate returns a promise.\n    // We use the shorthand `resolve` to return a promise resolved with the value `true`\n    when(getMock(Router).navigate(['logout'])).resolve(true);\n    const result = service.checkAccess('lobby');\n    expect(result).toBe(false);\n});\n")),Object(r.b)("p",null,"But in this case we don't just want to specify what to do when this method is called. We want to ",Object(r.b)("em",{parentName:"p"},"verify")," that this method was called with the appropriate arguments."),Object(r.b)("p",null,"We us the ",Object(r.b)("a",Object(c.a)({parentName:"p"},{href:"https://github.com/hmil/omnimock#quantifiers"}),Object(r.b)("em",{parentName:"a"},"quantifier ",Object(r.b)("inlineCode",{parentName:"em"},".once()")))," to specify that we expect this method to be called exactly once."),Object(r.b)("pre",null,Object(r.b)("code",Object(c.a)({parentName:"pre"},{className:"language-ts"}),"it('redirects to logout when trying to access the lobby while authenticated', () => {\n    // Doesn't care if this is used or not\n    when(getMock(AuthService).isAuthenticated()).return(true);\n    // Throws an error if this is never called, or called more than once\n    when(getMock(Router).navigate(['logout'])).resolve(true).once();\n    const result = service.checkAccess('lobby');\n    expect(result).toBe(false);\n});\n")),Object(r.b)("p",null,"Inceed, this test fails when we remove the call in ",Object(r.b)("inlineCode",{parentName:"p"},"access-control.service.ts"),"."),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"access-control.service.ts (snippet)")),Object(r.b)("pre",null,Object(r.b)("code",Object(c.a)({parentName:"pre"},{className:"language-ts"}),"if (zone === 'lobby' && this.authService.isAuthenticated()) {\n    // this.router.navigate(['logout']); Without this, the test fails\n    return false;\n}\n")),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(c.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(c.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(c.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(c.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(r.b)("div",Object(c.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"In OmniMock, you need to invoke ",Object(r.b)("inlineCode",{parentName:"p"},"verify()")," on a mock to verify that the number of calls match the expectation.\nNgVacuum takes care of this automatically for you; It calls ",Object(r.b)("inlineCode",{parentName:"p"},"verify()")," on all mocks in an ",Object(r.b)("inlineCode",{parentName:"p"},"afterEach")," function, catching any missing call before the test finishes."))),Object(r.b)("h2",{id:"recap"},"Recap"),Object(r.b)("p",null,"We wrote a true unit test for a service in complete isolation, with practically no boilerplate. What's more, the whole code is type-safe and won't break unexpectedly during future refactoring of the main code."),Object(r.b)("p",null,"The complete test is shown below for reference."),Object(r.b)("pre",null,Object(r.b)("code",Object(c.a)({parentName:"pre"},{className:"language-ts"}),"import { AccessControlService } from './access-control.service';\nimport { getMock, getService } from 'ng-vacuum';\nimport { when } from 'omnimock';\nimport { AuthService } from './auth.service';\nimport { Router } from '@angular/router';\n\ndescribe('AccessControlService', () => {\n    let service: AccessControlService;\n\n    beforeEach(() => {\n        service = getService(AccessControlService);\n    });\n\n    it('redirects to logout when trying to access the lobby while authenticated', () => {\n        when(getMock(AuthService).isAuthenticated()).return(true);\n        when(getMock(Router).navigate(['logout'])).resolve(true).once();\n        const result = service.checkAccess('lobby');\n        expect(result).toBe(false);\n    });\n});\n")),Object(r.b)("p",null,"The combo NgVacuum + OmniMock offers an extremely powerful mocking machinery which is able to mock just about anything; from methods to members, accessors and more. We cover some common use cases later in ",Object(r.b)("a",Object(c.a)({parentName:"p"},{href:"./mocking-techniques"}),"mocking techniques"),"."),Object(r.b)("p",null,"But first, let's take a look at how to mock a component."))}b.isMDXComponent=!0},157:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var c=n(0),a=n.n(c);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);t&&(c=c.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,c)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,c,a=function(e,t){if(null==e)return{};var n,c,a={},r=Object.keys(e);for(c=0;c<r.length;c++)n=r[c],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(c=0;c<r.length;c++)n=r[c],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),b=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i({},t,{},e)),n},u=function(e){var t=b(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},h=Object(c.forwardRef)((function(e,t){var n=e.components,c=e.mdxType,r=e.originalType,o=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=b(n),h=c,m=u["".concat(o,".").concat(h)]||u[h]||p[h]||r;return n?a.a.createElement(m,i({ref:t},l,{components:n})):a.a.createElement(m,i({ref:t},l))}));function m(e,t){var n=arguments,c=t&&t.mdxType;if("string"==typeof e||c){var r=n.length,o=new Array(r);o[0]=h;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:c,o[1]=i;for(var l=2;l<r;l++)o[l]=n[l];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}h.displayName="MDXCreateElement"}}]);